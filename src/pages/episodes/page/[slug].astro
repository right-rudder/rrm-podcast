---
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getPaginatedCanonical } from "@/lib/canonical";
import PageHeader from "@/partials/PageHeader.astro";
import PostSidebar from "@/partials/PostSidebar.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const EPISODES_FOLDER = "episodes";

const { slug } = Astro.params;
const episodesIndex = (await getEntry(
  EPISODES_FOLDER,
  "-index"
)) as CollectionEntry<"episodes">;
const episodes = await getSinglePage(EPISODES_FOLDER);
const allCategories = await getAllTaxonomy(EPISODES_FOLDER, "categories");
const categories = await getTaxonomy(EPISODES_FOLDER, "categories");
const tags = await getTaxonomy(EPISODES_FOLDER, "tags");
const sortedEpisodes = sortByDate(episodes);
const totalPages = Math.ceil(episodes.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastEpisode = currentPage * config.settings.pagination;
const indexOfFirstEpisode = indexOfLastEpisode - config.settings.pagination;
const currentEpisodes = sortedEpisodes.slice(
  indexOfFirstEpisode,
  indexOfLastEpisode
);

// Generate canonical URL for paginated episodes
// Page 1 canonical points to /episodes, other pages to /episodes/page/N
const canonical = getPaginatedCanonical("episodes", currentPage);

export async function getStaticPaths() {
  const EPISODES_FOLDER = "episodes";
  const episodes = await getSinglePage(EPISODES_FOLDER);
  const totalPages = Math.ceil(episodes.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Base
  title={episodesIndex.data.title}
  meta_title={episodesIndex.data.meta_title}
  image={episodesIndex.data.image}
  description={episodesIndex.data.description}
  canonical={canonical}
>
  <PageHeader title={episodesIndex.data.title} />
  <section class="section">
    <div class="container">
      <div class="row gx-5">
        <!-- episode posts -->
        <div class="lg:col-8">
          <div class="row">
            {
              currentEpisodes.map((episode) => (
                <div class="mb-14 md:col-6">
                  <BlogCard data={episode} />
                </div>
              ))
            }
          </div>
          <Pagination
            section={EPISODES_FOLDER}
            currentPage={currentPage}
            totalPages={totalPages}
          />
        </div>

        <!-- sidebar -->
        <PostSidebar
          categories={categories}
          tags={tags}
          allCategories={allCategories}
        />
      </div>
    </div>
  </section>
</Base>
